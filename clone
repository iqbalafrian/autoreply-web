<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>AutoReply</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f0f8ff;
      color: #000;
      margin: 0;
      padding: 0;
      transition: background-color 0.3s ease, color 0.3s ease;
    }
    body.dark {
      background-color: #121212;
      color: #f0f0f0;
    }
    header {
      background-color: #007BFF;
      color: white;
      padding: 1rem;
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    #searchInput {
      position: absolute;
      left: 1rem;
      padding-left: 2rem;
      height: 2rem;
      border-radius: 4px;
      border: none;
      font-size: 1rem;
    }
    #searchInput::before {
      content: "üîç";
    }
    .dark #searchInput {
      background-color: #333;
      color: #f0f0f0;
    }
    #darkToggle {
      position: absolute;
      right: 1rem;
      background: none;
      border: none;
      cursor: pointer;
    }
    main {
      padding: 1rem;
    }
    textarea, input[type="text"] {
      width: 100%;
      padding: 0.5rem;
      margin-bottom: 0.5rem;
      font-size: 1rem;
    }
    button {
      margin: 0.25rem;
      padding: 0.5rem 1rem;
      font-size: 1rem;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    .primary { background-color: #007BFF; color: white; }
    .danger { background-color: #dc3545; color: white; }
    .template {
      background-color: #e0f0ff;
      padding: 0.5rem;
      border-radius: 5px;
      margin: 0.5rem 0;
      display: flex;
      align-items: center;
    }
    .dark .template { background-color: #333; }
    .template input[type="checkbox"] {
      margin-right: 0.5rem;
    }
    .template-content {
      flex: 1;
    }
    .template-actions button {
      margin-left: 0.5rem;
    }
    #deleteSelected {
      display: none;
    }
  </style>
</head>
<body>
  <header>
    <input type="text" id="searchInput" placeholder="üîç Cari template..." oninput="renderTemplates()" />
    AutoReply
    <button id="darkToggle" onclick="toggleDarkMode()">üåì</button>
  </header>
  <main>
    <input type="text" id="titleInput" placeholder="Judul Template..." />
    <textarea id="templateInput" rows="3" placeholder="Isi Template..."></textarea>
    <button class="primary" onclick="addOrUpdateTemplate()" id="addBtn">Tambah Template</button>
    <button class="danger" onclick="deleteSelected()" id="deleteSelected">Hapus Terpilih</button>
    <button onclick="selectAll()">Pilih Semua</button>
    <button onclick="clearSelection()">Batal Pilih</button>
    <div id="templates"></div>
  </main>

  <script>
    let templates = JSON.parse(localStorage.getItem("templates") || "[]");
    let editingIndex = -1;

    function saveTemplates() {
      localStorage.setItem("templates", JSON.stringify(templates));
    }

    function renderTemplates() {
      const container = document.getElementById("templates");
      const query = document.getElementById("searchInput").value.toLowerCase();
      container.innerHTML = "";

      templates.forEach((t, i) => {
        if (!t.text || !t.title) return;
        if (query && !t.text.toLowerCase().includes(query) && !t.title.toLowerCase().includes(query)) return;

        const div = document.createElement("div");
        div.className = "template";

        const checkbox = document.createElement("input");
        checkbox.type = "checkbox";
        checkbox.className = "template-checkbox";
        checkbox.onchange = toggleDeleteBtn;

        const content = document.createElement("div");
        content.className = "template-content";
        content.innerHTML = `<strong>${t.title}</strong><br>${t.text}`;

        const actions = document.createElement("div");
        actions.className = "template-actions";

        const editBtn = document.createElement("button");
        editBtn.textContent = "Edit";
        editBtn.onclick = () => editTemplate(i);

        const copyBtn = document.createElement("button");
        copyBtn.textContent = "Salin";
        copyBtn.onclick = () => copyToClipboard(t.text);

        actions.appendChild(editBtn);
        actions.appendChild(copyBtn);

        div.appendChild(checkbox);
        div.appendChild(content);
        div.appendChild(actions);

        container.appendChild(div);
      });

      toggleDeleteBtn();
    }

    function addOrUpdateTemplate() {
      const title = document.getElementById("titleInput").value.trim();
      const text = document.getElementById("templateInput").value.trim();
      if (!title || !text) return;

      if (editingIndex === -1) {
        if (templates.some(t => t.title === title)) {
          alert("Judul sudah digunakan");
          return;
        }
        templates.push({ title, text });
      } else {
        templates[editingIndex] = { title, text };
        editingIndex = -1;
        document.getElementById("addBtn").textContent = "Tambah Template";
      }

      saveTemplates();
      renderTemplates();
      document.getElementById("titleInput").value = "";
      document.getElementById("templateInput").value = "";
    }

    function editTemplate(index) {
      document.getElementById("titleInput").value = templates[index].title;
      document.getElementById("templateInput").value = templates[index].text;
      editingIndex = index;
      document.getElementById("addBtn").textContent = "Simpan Edit";
    }

    function deleteSelected() {
      const checkboxes = document.querySelectorAll(".template-checkbox");
      templates = templates.filter((_, i) => !checkboxes[i].checked);
      saveTemplates();
      renderTemplates();
    }

    function selectAll() {
      document.querySelectorAll(".template-checkbox").forEach(cb => cb.checked = true);
      toggleDeleteBtn();
    }

    function clearSelection() {
      document.querySelectorAll(".template-checkbox").forEach(cb => cb.checked = false);
      toggleDeleteBtn();
    }

    function toggleDeleteBtn() {
      const anyChecked = [...document.querySelectorAll(".template-checkbox")].some(cb => cb.checked);
      document.getElementById("deleteSelected").style.display = anyChecked ? "inline-block" : "none";
    }

    function copyToClipboard(text) {
      navigator.clipboard.writeText(text).then(() => alert("Disalin ke clipboard"));
    }

    function toggleDarkMode() {
      document.body.classList.toggle("dark");
    }

    renderTemplates();
  </script>
</body>
</html>
